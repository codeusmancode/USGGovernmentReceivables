package com.usaparel.model.EO.REBATE;

import java.math.BigDecimal;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 22 11:18:19 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxRebateRefundAttachmentImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AttachmentId,
        RebateRefundId,
        FileName,
        FileLocation,
        AttchType,
        CreatedBy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return XxRebateRefundAttachmentImpl.AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return XxRebateRefundAttachmentImpl.AttributesEnum.firstIndex() + XxRebateRefundAttachmentImpl.AttributesEnum
                                                                                                          .staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxRebateRefundAttachmentImpl.AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int REBATEREFUNDID = AttributesEnum.RebateRefundId.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILELOCATION = AttributesEnum.FileLocation.index();
    public static final int ATTCHTYPE = AttributesEnum.AttchType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxRebateRefundAttachmentImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.usaparel.model.EO.XxRebateRefundAttachment");
    }

    /**
     * Gets the attribute value for AttachmentId, using the alias name AttachmentId.
     * @return the value of AttachmentId
     */
    public BigDecimal getAttachmentId() {
        return (BigDecimal) getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentId.
     * @param value value to set the AttachmentId
     */
    public void setAttachmentId(BigDecimal value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for RebateRefundId, using the alias name RebateRefundId.
     * @return the value of RebateRefundId
     */
    public BigDecimal getRebateRefundId() {
        return (BigDecimal) getAttributeInternal(REBATEREFUNDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RebateRefundId.
     * @param value value to set the RebateRefundId
     */
    public void setRebateRefundId(BigDecimal value) {
        setAttributeInternal(REBATEREFUNDID, value);
    }

    /**
     * Gets the attribute value for FileName, using the alias name FileName.
     * @return the value of FileName
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileName.
     * @param value value to set the FileName
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FileLocation, using the alias name FileLocation.
     * @return the value of FileLocation
     */
    public String getFileLocation() {
        return (String) getAttributeInternal(FILELOCATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for FileLocation.
     * @param value value to set the FileLocation
     */
    public void setFileLocation(String value) {
        setAttributeInternal(FILELOCATION, value);
    }

    /**
     * Gets the attribute value for AttchType, using the alias name AttchType.
     * @return the value of AttchType
     */
    public String getAttchType() {
        return (String) getAttributeInternal(ATTCHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttchType.
     * @param value value to set the AttchType
     */
    public void setAttchType(String value) {
        setAttributeInternal(ATTCHTYPE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }


    /**
     * @param attachmentId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal attachmentId) {
        return new Key(new Object[] { attachmentId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String username = (ADFContext.getCurrent()
                                     .getSessionScope()
                                     .get("userid") == null ? "-1" : ADFContext.getCurrent()
                                                                               .getSessionScope()
                                                                               .get("userid")
                                                                               .toString());
        
        switch(operation){
        case DML_UPDATE:
            setCreatedBy(new BigDecimal(username));
            break;
        }
        super.doDML(operation, e);
    }
}

