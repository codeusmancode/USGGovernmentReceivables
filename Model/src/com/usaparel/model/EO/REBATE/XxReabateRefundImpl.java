package com.usaparel.model.EO.REBATE;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 19 13:57:04 PKT 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxReabateRefundImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        RebateRefundId,
        InvoiceNumber,
        ShippingPort,
        ShippingBillNo,
        ShippingBillDate,
        RebateAmount,
        CaseFiledDate,
        ClaimFiledFinancialYear,
        RebateAmountReceived,
        LessExcess,
        ChequeNo,
        ChequeDate,
        ClaimRecFinancialYear,
        Status,
        PendingAmount,
        CreatedBy,
        CreationDate,
        UpdatedBy,
        UpdationDate,
        VersionNumber,
        ConsultantDispatchDate,
        InvoiceValue,
        RealizationDate,
        RebateEsitmate,
        OrgId,
        ClaimAgainst,
        CommercialInvoiceNumber,
        Format,
        DataFormat,
        ReceiptNumber;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return XxReabateRefundImpl.AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return XxReabateRefundImpl.AttributesEnum.firstIndex() + XxReabateRefundImpl.AttributesEnum
                                                                                        .staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = XxReabateRefundImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int REBATEREFUNDID = AttributesEnum.RebateRefundId.index();
    public static final int INVOICENUMBER = AttributesEnum.InvoiceNumber.index();
    public static final int SHIPPINGPORT = AttributesEnum.ShippingPort.index();
    public static final int SHIPPINGBILLNO = AttributesEnum.ShippingBillNo.index();
    public static final int SHIPPINGBILLDATE = AttributesEnum.ShippingBillDate.index();
    public static final int REBATEAMOUNT = AttributesEnum.RebateAmount.index();
    public static final int CASEFILEDDATE = AttributesEnum.CaseFiledDate.index();
    public static final int CLAIMFILEDFINANCIALYEAR = AttributesEnum.ClaimFiledFinancialYear.index();
    public static final int REBATEAMOUNTRECEIVED = AttributesEnum.RebateAmountReceived.index();
    public static final int LESSEXCESS = AttributesEnum.LessExcess.index();
    public static final int CHEQUENO = AttributesEnum.ChequeNo.index();
    public static final int CHEQUEDATE = AttributesEnum.ChequeDate.index();
    public static final int CLAIMRECFINANCIALYEAR = AttributesEnum.ClaimRecFinancialYear.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int PENDINGAMOUNT = AttributesEnum.PendingAmount.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATIONDATE = AttributesEnum.UpdationDate.index();
    public static final int VERSIONNUMBER = AttributesEnum.VersionNumber.index();
    public static final int CONSULTANTDISPATCHDATE = AttributesEnum.ConsultantDispatchDate.index();
    public static final int INVOICEVALUE = AttributesEnum.InvoiceValue.index();
    public static final int REALIZATIONDATE = AttributesEnum.RealizationDate.index();
    public static final int REBATEESITMATE = AttributesEnum.RebateEsitmate.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLAIMAGAINST = AttributesEnum.ClaimAgainst.index();
    public static final int COMMERCIALINVOICENUMBER = AttributesEnum.CommercialInvoiceNumber.index();
    public static final int FORMAT = AttributesEnum.Format.index();
    public static final int DATAFORMAT = AttributesEnum.DataFormat.index();
    public static final int RECEIPTNUMBER = AttributesEnum.ReceiptNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxReabateRefundImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.usaparel.model.EO.REBATE.XxReabateRefund");
    }


    /**
     * Gets the attribute value for RebateRefundId, using the alias name RebateRefundId.
     * @return the value of RebateRefundId
     */
    public BigDecimal getRebateRefundId() {
        return (BigDecimal) getAttributeInternal(REBATEREFUNDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RebateRefundId.
     * @param value value to set the RebateRefundId
     */
    public void setRebateRefundId(BigDecimal value) {
        setAttributeInternal(REBATEREFUNDID, value);
    }

    /**
     * Gets the attribute value for InvoiceNumber, using the alias name InvoiceNumber.
     * @return the value of InvoiceNumber
     */
    public String getInvoiceNumber() {
        return (String) getAttributeInternal(INVOICENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvoiceNumber.
     * @param value value to set the InvoiceNumber
     */
    public void setInvoiceNumber(String value) {
        setAttributeInternal(INVOICENUMBER, value);
    }

    /**
     * Gets the attribute value for ShippingPort, using the alias name ShippingPort.
     * @return the value of ShippingPort
     */
    public String getShippingPort() {
        return (String) getAttributeInternal(SHIPPINGPORT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShippingPort.
     * @param value value to set the ShippingPort
     */
    public void setShippingPort(String value) {
        setAttributeInternal(SHIPPINGPORT, value);
    }

    /**
     * Gets the attribute value for ShippingBillNo, using the alias name ShippingBillNo.
     * @return the value of ShippingBillNo
     */
    public String getShippingBillNo() {
        return (String) getAttributeInternal(SHIPPINGBILLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShippingBillNo.
     * @param value value to set the ShippingBillNo
     */
    public void setShippingBillNo(String value) {
        setAttributeInternal(SHIPPINGBILLNO, value);
    }

    /**
     * Gets the attribute value for ShippingBillDate, using the alias name ShippingBillDate.
     * @return the value of ShippingBillDate
     */
    public Timestamp getShippingBillDate() {
        return (Timestamp) getAttributeInternal(SHIPPINGBILLDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShippingBillDate.
     * @param value value to set the ShippingBillDate
     */
    public void setShippingBillDate(Timestamp value) {
        setAttributeInternal(SHIPPINGBILLDATE, value);
    }

    /**
     * Gets the attribute value for RebateAmount, using the alias name RebateAmount.
     * @return the value of RebateAmount
     */
    public BigDecimal getRebateAmount() {
        return (BigDecimal) getAttributeInternal(REBATEAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RebateAmount.
     * @param value value to set the RebateAmount
     */
    public void setRebateAmount(BigDecimal value) {
        setAttributeInternal(REBATEAMOUNT, value);
    }

    /**
     * Gets the attribute value for CaseFiledDate, using the alias name CaseFiledDate.
     * @return the value of CaseFiledDate
     */
    public Timestamp getCaseFiledDate() {
        return (Timestamp) getAttributeInternal(CASEFILEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CaseFiledDate.
     * @param value value to set the CaseFiledDate
     */
    public void setCaseFiledDate(Timestamp value) {
        setAttributeInternal(CASEFILEDDATE, value);
    }

    /**
     * Gets the attribute value for ClaimFiledFinancialYear, using the alias name ClaimFiledFinancialYear.
     * @return the value of ClaimFiledFinancialYear
     */
    public String getClaimFiledFinancialYear() {
        return (String) getAttributeInternal(CLAIMFILEDFINANCIALYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClaimFiledFinancialYear.
     * @param value value to set the ClaimFiledFinancialYear
     */
    public void setClaimFiledFinancialYear(String value) {
        setAttributeInternal(CLAIMFILEDFINANCIALYEAR, value);
    }

    /**
     * Gets the attribute value for RebateAmountReceived, using the alias name RebateAmountReceived.
     * @return the value of RebateAmountReceived
     */
    public BigDecimal getRebateAmountReceived() {
        return (BigDecimal) getAttributeInternal(REBATEAMOUNTRECEIVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for RebateAmountReceived.
     * @param value value to set the RebateAmountReceived
     */
    public void setRebateAmountReceived(BigDecimal value) {
        setAttributeInternal(REBATEAMOUNTRECEIVED, value);
    }

    /**
     * Gets the attribute value for LessExcess, using the alias name LessExcess.
     * @return the value of LessExcess
     */
    public BigDecimal getLessExcess() {
        return (BigDecimal) getAttributeInternal(LESSEXCESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LessExcess.
     * @param value value to set the LessExcess
     */
    public void setLessExcess(BigDecimal value) {
        setAttributeInternal(LESSEXCESS, value);
    }

    /**
     * Gets the attribute value for ChequeNo, using the alias name ChequeNo.
     * @return the value of ChequeNo
     */
    public String getChequeNo() {
        return (String) getAttributeInternal(CHEQUENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChequeNo.
     * @param value value to set the ChequeNo
     */
    public void setChequeNo(String value) {
        setAttributeInternal(CHEQUENO, value);
    }

    /**
     * Gets the attribute value for ChequeDate, using the alias name ChequeDate.
     * @return the value of ChequeDate
     */
    public Timestamp getChequeDate() {
        return (Timestamp) getAttributeInternal(CHEQUEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChequeDate.
     * @param value value to set the ChequeDate
     */
    public void setChequeDate(Timestamp value) {
        setAttributeInternal(CHEQUEDATE, value);
    }

    /**
     * Gets the attribute value for ClaimRecFinancialYear, using the alias name ClaimRecFinancialYear.
     * @return the value of ClaimRecFinancialYear
     */
    public String getClaimRecFinancialYear() {
        return (String) getAttributeInternal(CLAIMRECFINANCIALYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClaimRecFinancialYear.
     * @param value value to set the ClaimRecFinancialYear
     */
    public void setClaimRecFinancialYear(String value) {
        setAttributeInternal(CLAIMRECFINANCIALYEAR, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for PendingAmount, using the alias name PendingAmount.
     * @return the value of PendingAmount
     */
    public BigDecimal getPendingAmount() {
        return (BigDecimal) getAttributeInternal(PENDINGAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendingAmount.
     * @param value value to set the PendingAmount
     */
    public void setPendingAmount(BigDecimal value) {
        setAttributeInternal(PENDINGAMOUNT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the value of CreationDate
     */
    public Timestamp getCreationDate() {
        return (Timestamp) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdationDate, using the alias name UpdationDate.
     * @return the value of UpdationDate
     */
    public Timestamp getUpdationDate() {
        return (Timestamp) getAttributeInternal(UPDATIONDATE);
    }

    /**
     * Gets the attribute value for VersionNumber, using the alias name VersionNumber.
     * @return the value of VersionNumber
     */
    public BigDecimal getVersionNumber() {
        return (BigDecimal) getAttributeInternal(VERSIONNUMBER);
    }


    /**
     * Gets the attribute value for ConsultantDispatchDate, using the alias name ConsultantDispatchDate.
     * @return the value of ConsultantDispatchDate
     */
    public Timestamp getConsultantDispatchDate() {
        return (Timestamp) getAttributeInternal(CONSULTANTDISPATCHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConsultantDispatchDate.
     * @param value value to set the ConsultantDispatchDate
     */
    public void setConsultantDispatchDate(Timestamp value) {
        setAttributeInternal(CONSULTANTDISPATCHDATE, value);
    }

    /**
     * Gets the attribute value for InvoiceValue, using the alias name InvoiceValue.
     * @return the value of InvoiceValue
     */
    public BigDecimal getInvoiceValue() {
        return (BigDecimal) getAttributeInternal(INVOICEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvoiceValue.
     * @param value value to set the InvoiceValue
     */
    public void setInvoiceValue(BigDecimal value) {
        setAttributeInternal(INVOICEVALUE, value);
    }

    /**
     * Gets the attribute value for RealizationDate, using the alias name RealizationDate.
     * @return the value of RealizationDate
     */
    public Timestamp getRealizationDate() {
        return (Timestamp) getAttributeInternal(REALIZATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RealizationDate.
     * @param value value to set the RealizationDate
     */
    public void setRealizationDate(Timestamp value) {
        setAttributeInternal(REALIZATIONDATE, value);
    }

    /**
     * Gets the attribute value for RebateEsitmate, using the alias name RebateEsitmate.
     * @return the value of RebateEsitmate
     */
    public BigDecimal getRebateEsitmate() {
        return (BigDecimal) getAttributeInternal(REBATEESITMATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RebateEsitmate.
     * @param value value to set the RebateEsitmate
     */
    public void setRebateEsitmate(BigDecimal value) {
        setAttributeInternal(REBATEESITMATE, value);
    }


    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public BigDecimal getOrgId() {
        return (BigDecimal) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(BigDecimal value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ClaimAgainst, using the alias name ClaimAgainst.
     * @return the value of ClaimAgainst
     */
    public String getClaimAgainst() {
        return (String) getAttributeInternal(CLAIMAGAINST);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClaimAgainst.
     * @param value value to set the ClaimAgainst
     */
    public void setClaimAgainst(String value) {
        setAttributeInternal(CLAIMAGAINST, value);
    }

    /**
     * Gets the attribute value for CommercialInvoiceNumber, using the alias name CommercialInvoiceNumber.
     * @return the value of CommercialInvoiceNumber
     */
    public String getCommercialInvoiceNumber() {
        return (String) getAttributeInternal(COMMERCIALINVOICENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CommercialInvoiceNumber.
     * @param value value to set the CommercialInvoiceNumber
     */
    public void setCommercialInvoiceNumber(String value) {
        setAttributeInternal(COMMERCIALINVOICENUMBER, value);
    }

    /**
     * Gets the attribute value for Format, using the alias name Format.
     * @return the value of Format
     */
    public String getFormat() {
        return (String) getAttributeInternal(FORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Format.
     * @param value value to set the Format
     */
    public void setFormat(String value) {
        setAttributeInternal(FORMAT, value);
    }

    /**
     * Gets the attribute value for DataFormat, using the alias name DataFormat.
     * @return the value of DataFormat
     */
    public String getDataFormat() {
        return (String) getAttributeInternal(DATAFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataFormat.
     * @param value value to set the DataFormat
     */
    public void setDataFormat(String value) {
        setAttributeInternal(DATAFORMAT, value);
    }

    /**
     * Gets the attribute value for ReceiptNumber, using the alias name ReceiptNumber.
     * @return the value of ReceiptNumber
     */
    public String getReceiptNumber() {
        return (String) getAttributeInternal(RECEIPTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptNumber.
     * @param value value to set the ReceiptNumber
     */
    public void setReceiptNumber(String value) {
        setAttributeInternal(RECEIPTNUMBER, value);
    }

    /**
     * @param rebateRefundId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal rebateRefundId) {
        return new Key(new Object[] { rebateRefundId });
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        String username = (ADFContext.getCurrent()
                                     .getSessionScope()
                                     .get("userid") == null ? "-1" : ADFContext.getCurrent()
                                                                               .getSessionScope()
                                                                               .get("userid")
                                                                               .toString());
        switch (operation) {

        case DML_INSERT:
            System.out.println("DML_INSERT");
            setCreatedBy(new BigDecimal(username));
            break;
        case DML_UPDATE:
            System.out.println("DML_UPDATE");
            CallableStatement cst = null;
            try {
                cst = getDBTransaction().createCallableStatement("{call xx_rebate_history(?)}", 0);
                cst.setInt(1, getRebateRefundId().intValue());
                cst.executeUpdate();

            } catch (Exception ex) {
                ex.printStackTrace();

            }
            setUpdatedBy(new BigDecimal(username));
            break;
        }
        super.doDML(operation, e);
    }
}

